;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 2.0.1
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(in-package :lla)



;;;SWIG wrapper code starts here

(cl:defmacro defanonenum (&body enums)
   "Converts anonymous enums to defconstants."
  `(cl:progn ,@(cl:loop for value in enums
                        for index = 0 then (cl:1+ index)
                        when (cl:listp value) do (cl:setf index (cl:second value)
                                                          value (cl:first value))
                        collect `(cl:defconstant ,value ,index))))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:fboundp 'swig-lispify)
    (cl:defun swig-lispify (name flag cl:&optional (package cl:*package*))
      (cl:labels ((helper (lst last rest cl:&aux (c (cl:car lst)))
                    (cl:cond
                      ((cl:null lst)
                       rest)
                      ((cl:upper-case-p c)
                       (helper (cl:cdr lst) 'upper
                               (cl:case last
                                 ((lower digit) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:lower-case-p c)
                       (helper (cl:cdr lst) 'lower (cl:cons (cl:char-upcase c) rest)))
                      ((cl:digit-char-p c)
                       (helper (cl:cdr lst) 'digit 
                               (cl:case last
                                 ((upper lower) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:char-equal c #\_)
                       (helper (cl:cdr lst) '_ (cl:cons #\- rest)))
                      (cl:t
                       (cl:error "Invalid character: ~A" c)))))
        (cl:let ((fix (cl:case flag
                        ((constant enumvalue) "+")
                        (variable "*")
                        (cl:t ""))))
          (cl:intern
           (cl:concatenate
            'cl:string
            fix
            (cl:nreverse (helper (cl:concatenate 'cl:list name) cl:nil cl:nil))
            fix)
           package))))))

;;;SWIG wrapper code ends here


(cffi:defcenum CBLAS_ORDER
	(:CblasRowMajor #.101)
	(:CblasColMajor #.102))

(cffi:defcenum CBLAS_TRANSPOSE
	(:CblasNoTrans #.111)
	(:CblasTrans #.112)
	(:CblasConjTrans #.113))

(cffi:defcenum CBLAS_UPLO
	(:CblasUpper #.121)
	(:CblasLower #.122))

(cffi:defcenum CBLAS_DIAG
	(:CblasNonUnit #.131)
	(:CblasUnit #.132))

(cffi:defcenum CBLAS_SIDE
	(:CblasLeft #.141)
	(:CblasRight #.142))

(cffi:defcfun ("cblas_dcabs1" cblas_dcabs1) :double
  (z :pointer))

(cffi:defcfun ("cblas_scabs1" cblas_scabs1) :float
  (c :pointer))

(cffi:defcfun ("cblas_sdot" cblas_sdot) :float
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_sdoti" cblas_sdoti) :float
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_ddot" cblas_ddot) :double
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_ddoti" cblas_ddoti) :double
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_dsdot" cblas_dsdot) :double
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_sdsdot" cblas_sdsdot) :float
  (N :int32)
  (sb :float)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_cdotu_sub" cblas_cdotu_sub) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (dotu :pointer))

(cffi:defcfun ("cblas_cdotui_sub" cblas_cdotui_sub) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer)
  (dotui :pointer))

(cffi:defcfun ("cblas_cdotc_sub" cblas_cdotc_sub) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (dotc :pointer))

(cffi:defcfun ("cblas_cdotci_sub" cblas_cdotci_sub) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer)
  (dotui :pointer))

(cffi:defcfun ("cblas_zdotu_sub" cblas_zdotu_sub) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (dotu :pointer))

(cffi:defcfun ("cblas_zdotui_sub" cblas_zdotui_sub) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer)
  (dotui :pointer))

(cffi:defcfun ("cblas_zdotc_sub" cblas_zdotc_sub) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (dotc :pointer))

(cffi:defcfun ("cblas_zdotci_sub" cblas_zdotci_sub) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer)
  (dotui :pointer))

(cffi:defcfun ("cblas_snrm2" cblas_snrm2) :float
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_sasum" cblas_sasum) :float
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dnrm2" cblas_dnrm2) :double
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dasum" cblas_dasum) :double
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_scnrm2" cblas_scnrm2) :float
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_scasum" cblas_scasum) :float
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dznrm2" cblas_dznrm2) :double
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dzasum" cblas_dzasum) :double
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_isamax" cblas_isamax) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_idamax" cblas_idamax) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_icamax" cblas_icamax) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_izamax" cblas_izamax) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_isamin" cblas_isamin) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_idamin" cblas_idamin) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_icamin" cblas_icamin) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_izamin" cblas_izamin) :pointer
  (N :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_sswap" cblas_sswap) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_scopy" cblas_scopy) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_saxpy" cblas_saxpy) :void
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_saxpby" cblas_saxpby) :void
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (beta :float)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_saxpyi" cblas_saxpyi) :void
  (N :int32)
  (alpha :float)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_sgthr" cblas_sgthr) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_sgthrz" cblas_sgthrz) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_ssctr" cblas_ssctr) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_srotg" cblas_srotg) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cffi:defcfun ("cblas_dswap" cblas_dswap) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_dcopy" cblas_dcopy) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_daxpy" cblas_daxpy) :void
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_daxpby" cblas_daxpby) :void
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (beta :double)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_daxpyi" cblas_daxpyi) :void
  (N :int32)
  (alpha :double)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_dgthr" cblas_dgthr) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_dgthrz" cblas_dgthrz) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_dsctr" cblas_dsctr) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_drotg" cblas_drotg) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cffi:defcfun ("cblas_cswap" cblas_cswap) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_ccopy" cblas_ccopy) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_caxpy" cblas_caxpy) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_caxpby" cblas_caxpby) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_caxpyi" cblas_caxpyi) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_cgthr" cblas_cgthr) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_cgthrz" cblas_cgthrz) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_csctr" cblas_csctr) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_crotg" cblas_crotg) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cffi:defcfun ("cblas_zswap" cblas_zswap) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zcopy" cblas_zcopy) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zaxpy" cblas_zaxpy) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zaxpby" cblas_zaxpby) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zaxpyi" cblas_zaxpyi) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_zgthr" cblas_zgthr) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_zgthrz" cblas_zgthrz) :void
  (N :int32)
  (Y :pointer)
  (X :pointer)
  (indx :pointer))

(cffi:defcfun ("cblas_zsctr" cblas_zsctr) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer))

(cffi:defcfun ("cblas_zrotg" cblas_zrotg) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cffi:defcfun ("cblas_srotmg" cblas_srotmg) :void
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :float)
  (P :pointer))

(cffi:defcfun ("cblas_srot" cblas_srot) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (c :float)
  (s :float))

(cffi:defcfun ("cblas_sroti" cblas_sroti) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer)
  (c :float)
  (s :float))

(cffi:defcfun ("cblas_srotm" cblas_srotm) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (P :pointer))

(cffi:defcfun ("cblas_drotmg" cblas_drotmg) :void
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :double)
  (P :pointer))

(cffi:defcfun ("cblas_drot" cblas_drot) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (c :double)
  (s :double))

(cffi:defcfun ("cblas_drotm" cblas_drotm) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (P :pointer))

(cffi:defcfun ("cblas_droti" cblas_droti) :void
  (N :int32)
  (X :pointer)
  (indx :pointer)
  (Y :pointer)
  (c :double)
  (s :double))

(cffi:defcfun ("cblas_csrot" cblas_csrot) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (c :float)
  (s :float))

(cffi:defcfun ("cblas_zdrot" cblas_zdrot) :void
  (N :int32)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (c :double)
  (s :double))

(cffi:defcfun ("cblas_sscal" cblas_sscal) :void
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dscal" cblas_dscal) :void
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_cscal" cblas_cscal) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_zscal" cblas_zscal) :void
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_csscal" cblas_csscal) :void
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_zdscal" cblas_zdscal) :void
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_sgemv" cblas_sgemv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :float)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_sgbmv" cblas_sgbmv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (KL :int32)
  (KU :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :float)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_strmv" cblas_strmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_stbmv" cblas_stbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_stpmv" cblas_stpmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_strsv" cblas_strsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_stbsv" cblas_stbsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_stpsv" cblas_stpsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dgemv" cblas_dgemv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :double)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_dgbmv" cblas_dgbmv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (KL :int32)
  (KU :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :double)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_dtrmv" cblas_dtrmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dtbmv" cblas_dtbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dtpmv" cblas_dtpmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dtrsv" cblas_dtrsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dtbsv" cblas_dtbsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_dtpsv" cblas_dtpsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_cgemv" cblas_cgemv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_cgbmv" cblas_cgbmv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (KL :int32)
  (KU :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_ctrmv" cblas_ctrmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ctbmv" cblas_ctbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ctpmv" cblas_ctpmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ctrsv" cblas_ctrsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ctbsv" cblas_ctbsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ctpsv" cblas_ctpsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_zgemv" cblas_zgemv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zgbmv" cblas_zgbmv) :void
  (order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (KL :int32)
  (KU :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_ztrmv" cblas_ztrmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ztbmv" cblas_ztbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ztpmv" cblas_ztpmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ztrsv" cblas_ztrsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ztbsv" cblas_ztbsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (K :int32)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ztpsv" cblas_ztpsv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (N :int32)
  (Ap :pointer)
  (X :pointer)
  (incX :int32))

(cffi:defcfun ("cblas_ssymv" cblas_ssymv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :float)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_ssbmv" cblas_ssbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (K :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :float)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_sspmv" cblas_sspmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (Ap :pointer)
  (X :pointer)
  (incX :int32)
  (beta :float)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_sger" cblas_sger) :void
  (order CBLAS_ORDER)
  (M :int32)
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_ssyr" cblas_ssyr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_sspr" cblas_sspr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (Ap :pointer))

(cffi:defcfun ("cblas_ssyr2" cblas_ssyr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_sspr2" cblas_sspr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer))

(cffi:defcfun ("cblas_dsymv" cblas_dsymv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :double)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_dsbmv" cblas_dsbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (K :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :double)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_dspmv" cblas_dspmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (Ap :pointer)
  (X :pointer)
  (incX :int32)
  (beta :double)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_dger" cblas_dger) :void
  (order CBLAS_ORDER)
  (M :int32)
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_dsyr" cblas_dsyr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_dspr" cblas_dspr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (Ap :pointer))

(cffi:defcfun ("cblas_dsyr2" cblas_dsyr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_dspr2" cblas_dspr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer))

(cffi:defcfun ("cblas_chemv" cblas_chemv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_chbmv" cblas_chbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_chpmv" cblas_chpmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (Ap :pointer)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_cgeru" cblas_cgeru) :void
  (order CBLAS_ORDER)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_cgerc" cblas_cgerc) :void
  (order CBLAS_ORDER)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_cher" cblas_cher) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_chpr" cblas_chpr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :float)
  (X :pointer)
  (incX :int32)
  (A :pointer))

(cffi:defcfun ("cblas_cher2" cblas_cher2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_chpr2" cblas_chpr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (Ap :pointer))

(cffi:defcfun ("cblas_zhemv" cblas_zhemv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zhbmv" cblas_zhbmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zhpmv" cblas_zhpmv) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (Ap :pointer)
  (X :pointer)
  (incX :int32)
  (beta :pointer)
  (Y :pointer)
  (incY :int32))

(cffi:defcfun ("cblas_zgeru" cblas_zgeru) :void
  (order CBLAS_ORDER)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_zgerc" cblas_zgerc) :void
  (order CBLAS_ORDER)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_zher" cblas_zher) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_zhpr" cblas_zhpr) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :double)
  (X :pointer)
  (incX :int32)
  (A :pointer))

(cffi:defcfun ("cblas_zher2" cblas_zher2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (A :pointer)
  (lda :int32))

(cffi:defcfun ("cblas_zhpr2" cblas_zhpr2) :void
  (order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (N :int32)
  (alpha :pointer)
  (X :pointer)
  (incX :int32)
  (Y :pointer)
  (incY :int32)
  (Ap :pointer))

(cffi:defcfun ("cblas_sgemm" cblas_sgemm) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (K :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :float)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_ssymm" cblas_ssymm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int32)
  (N :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :float)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_ssyrk" cblas_ssyrk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (beta :float)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_ssyr2k" cblas_ssyr2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :float)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_strmm" cblas_strmm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_strsm" cblas_strsm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_dgemm" cblas_dgemm) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (K :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :double)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_dsymm" cblas_dsymm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int32)
  (N :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :double)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_dsyrk" cblas_dsyrk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (beta :double)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_dsyr2k" cblas_dsyr2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :double)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_dtrmm" cblas_dtrmm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_dtrsm" cblas_dtrsm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_cgemm" cblas_cgemm) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_cgemm3m" cblas_cgemm3m) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_csymm" cblas_csymm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_csyrk" cblas_csyrk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_csyr2k" cblas_csyr2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_ctrmm" cblas_ctrmm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_ctrsm" cblas_ctrsm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_zgemm" cblas_zgemm) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_zgemm3m" cblas_zgemm3m) :void
  (Order CBLAS_ORDER)
  (TransA CBLAS_TRANSPOSE)
  (TransB CBLAS_TRANSPOSE)
  (M :int32)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_zsymm" cblas_zsymm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_zsyrk" cblas_zsyrk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_zsyr2k" cblas_zsyr2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_ztrmm" cblas_ztrmm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_ztrsm" cblas_ztrsm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (TransA CBLAS_TRANSPOSE)
  (Diag CBLAS_DIAG)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32))

(cffi:defcfun ("cblas_chemm" cblas_chemm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_cherk" cblas_cherk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :float)
  (A :pointer)
  (lda :int32)
  (beta :float)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_cher2k" cblas_cher2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :float)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_zhemm" cblas_zhemm) :void
  (Order CBLAS_ORDER)
  (Side CBLAS_SIDE)
  (Uplo CBLAS_UPLO)
  (M :int32)
  (N :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :pointer)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_zherk" cblas_zherk) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :double)
  (A :pointer)
  (lda :int32)
  (beta :double)
  (C :pointer)
  (ldc :int32))

(cffi:defcfun ("cblas_zher2k" cblas_zher2k) :void
  (Order CBLAS_ORDER)
  (Uplo CBLAS_UPLO)
  (Trans CBLAS_TRANSPOSE)
  (N :int32)
  (K :int32)
  (alpha :pointer)
  (A :pointer)
  (lda :int32)
  (B :pointer)
  (ldb :int32)
  (beta :double)
  (C :pointer)
  (ldc :int32))

(cl:defconstant LAPACK_ROW_MAJOR 101)

(cl:defconstant LAPACK_COL_MAJOR 102)

(cl:defconstant LAPACK_WORK_MEMORY_ERROR -1010)

(cl:defconstant LAPACK_TRANSPOSE_MEMORY_ERROR -1011)

(cffi:defcfun ("LAPACKE_sbdsdc" LAPACKE_sbdsdc) :int32
  (matrix_order :int)
  (uplo :char)
  (compq :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32)
  (q :pointer)
  (iq :pointer))

(cffi:defcfun ("LAPACKE_dbdsdc" LAPACKE_dbdsdc) :int32
  (matrix_order :int)
  (uplo :char)
  (compq :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32)
  (q :pointer)
  (iq :pointer))

(cffi:defcfun ("LAPACKE_sbdsqr" LAPACKE_sbdsqr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ncvt :int32)
  (nru :int32)
  (ncc :int32)
  (d :pointer)
  (e :pointer)
  (vt :pointer)
  (ldvt :int32)
  (u :pointer)
  (ldu :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dbdsqr" LAPACKE_dbdsqr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ncvt :int32)
  (nru :int32)
  (ncc :int32)
  (d :pointer)
  (e :pointer)
  (vt :pointer)
  (ldvt :int32)
  (u :pointer)
  (ldu :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cbdsqr" LAPACKE_cbdsqr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ncvt :int32)
  (nru :int32)
  (ncc :int32)
  (d :pointer)
  (e :pointer)
  (vt :pointer)
  (ldvt :int32)
  (u :pointer)
  (ldu :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zbdsqr" LAPACKE_zbdsqr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ncvt :int32)
  (nru :int32)
  (ncc :int32)
  (d :pointer)
  (e :pointer)
  (vt :pointer)
  (ldvt :int32)
  (u :pointer)
  (ldu :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sdisna" LAPACKE_sdisna) :int32
  (job :char)
  (m :int32)
  (n :int32)
  (d :pointer)
  (sep :pointer))

(cffi:defcfun ("LAPACKE_ddisna" LAPACKE_ddisna) :int32
  (job :char)
  (m :int32)
  (n :int32)
  (d :pointer)
  (sep :pointer))

(cffi:defcfun ("LAPACKE_sgbbrd" LAPACKE_sgbbrd) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (ncc :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32)
  (pt :pointer)
  (ldpt :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dgbbrd" LAPACKE_dgbbrd) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (ncc :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32)
  (pt :pointer)
  (ldpt :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cgbbrd" LAPACKE_cgbbrd) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (ncc :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32)
  (pt :pointer)
  (ldpt :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zgbbrd" LAPACKE_zgbbrd) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (ncc :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32)
  (pt :pointer)
  (ldpt :int32)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sgbcon" LAPACKE_sgbcon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dgbcon" LAPACKE_dgbcon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cgbcon" LAPACKE_cgbcon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zgbcon" LAPACKE_zgbcon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_sgbequ" LAPACKE_sgbequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dgbequ" LAPACKE_dgbequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cgbequ" LAPACKE_cgbequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zgbequ" LAPACKE_zgbequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_sgbequb" LAPACKE_sgbequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dgbequb" LAPACKE_dgbequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cgbequb" LAPACKE_cgbequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zgbequb" LAPACKE_zgbequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_sgbrfs" LAPACKE_sgbrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dgbrfs" LAPACKE_dgbrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cgbrfs" LAPACKE_cgbrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zgbrfs" LAPACKE_zgbrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sgbrfsx" LAPACKE_sgbrfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dgbrfsx" LAPACKE_dgbrfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_cgbrfsx" LAPACKE_cgbrfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zgbrfsx" LAPACKE_zgbrfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_sgbsv" LAPACKE_sgbsv) :int32
  (matrix_order :int)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dgbsv" LAPACKE_dgbsv) :int32
  (matrix_order :int)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cgbsv" LAPACKE_cgbsv) :int32
  (matrix_order :int)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zgbsv" LAPACKE_zgbsv) :int32
  (matrix_order :int)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sgbsvx" LAPACKE_sgbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_dgbsvx" LAPACKE_dgbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_cgbsvx" LAPACKE_cgbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_zgbsvx" LAPACKE_zgbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_sgbsvxx" LAPACKE_sgbsvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dgbsvxx" LAPACKE_dgbsvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_cgbsvxx" LAPACKE_cgbsvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zgbsvxx" LAPACKE_zgbsvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_sgbtrf" LAPACKE_sgbtrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dgbtrf" LAPACKE_dgbtrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_cgbtrf" LAPACKE_cgbtrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zgbtrf" LAPACKE_zgbtrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_sgbtrs" LAPACKE_sgbtrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dgbtrs" LAPACKE_dgbtrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cgbtrs" LAPACKE_cgbtrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zgbtrs" LAPACKE_zgbtrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (kl :int32)
  (ku :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sgebak" LAPACKE_sgebak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (scale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_dgebak" LAPACKE_dgebak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (scale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_cgebak" LAPACKE_cgebak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (scale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_zgebak" LAPACKE_zgebak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (scale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_sgebal" LAPACKE_sgebal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_dgebal" LAPACKE_dgebal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_cgebal" LAPACKE_cgebal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_zgebal" LAPACKE_zgebal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_sgebrd" LAPACKE_sgebrd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tauq :pointer)
  (taup :pointer))

(cffi:defcfun ("LAPACKE_dgebrd" LAPACKE_dgebrd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tauq :pointer)
  (taup :pointer))

(cffi:defcfun ("LAPACKE_cgebrd" LAPACKE_cgebrd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tauq :pointer)
  (taup :pointer))

(cffi:defcfun ("LAPACKE_zgebrd" LAPACKE_zgebrd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tauq :pointer)
  (taup :pointer))

(cffi:defcfun ("LAPACKE_sgecon" LAPACKE_sgecon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dgecon" LAPACKE_dgecon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cgecon" LAPACKE_cgecon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zgecon" LAPACKE_zgecon) :int32
  (matrix_order :int)
  (norm :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_sgeequ" LAPACKE_sgeequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dgeequ" LAPACKE_dgeequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cgeequ" LAPACKE_cgeequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zgeequ" LAPACKE_zgeequ) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_sgeequb" LAPACKE_sgeequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dgeequb" LAPACKE_dgeequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cgeequb" LAPACKE_cgeequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zgeequb" LAPACKE_zgeequb) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (r :pointer)
  (c :pointer)
  (rowcnd :pointer)
  (colcnd :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_sgees" LAPACKE_sgees) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (wr :pointer)
  (wi :pointer)
  (vs :pointer)
  (ldvs :int32))

(cffi:defcfun ("LAPACKE_dgees" LAPACKE_dgees) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (wr :pointer)
  (wi :pointer)
  (vs :pointer)
  (ldvs :int32))

(cffi:defcfun ("LAPACKE_cgees" LAPACKE_cgees) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (w :pointer)
  (vs :pointer)
  (ldvs :int32))

(cffi:defcfun ("LAPACKE_zgees" LAPACKE_zgees) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (w :pointer)
  (vs :pointer)
  (ldvs :int32))

(cffi:defcfun ("LAPACKE_sgeesx" LAPACKE_sgeesx) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (wr :pointer)
  (wi :pointer)
  (vs :pointer)
  (ldvs :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_dgeesx" LAPACKE_dgeesx) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (wr :pointer)
  (wi :pointer)
  (vs :pointer)
  (ldvs :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_cgeesx" LAPACKE_cgeesx) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (w :pointer)
  (vs :pointer)
  (ldvs :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_zgeesx" LAPACKE_zgeesx) :int32
  (matrix_order :int)
  (jobvs :char)
  (sort :char)
  (select :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sdim :pointer)
  (w :pointer)
  (vs :pointer)
  (ldvs :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_sgeev" LAPACKE_sgeev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (wr :pointer)
  (wi :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_dgeev" LAPACKE_dgeev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (wr :pointer)
  (wi :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_cgeev" LAPACKE_cgeev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_zgeev" LAPACKE_zgeev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_sgeevx" LAPACKE_sgeevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (wr :pointer)
  (wi :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer)
  (abnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_dgeevx" LAPACKE_dgeevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (wr :pointer)
  (wi :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer)
  (abnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_cgeevx" LAPACKE_cgeevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer)
  (abnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_zgeevx" LAPACKE_zgeevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (scale :pointer)
  (abnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_sgehrd" LAPACKE_sgehrd) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgehrd" LAPACKE_dgehrd) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgehrd" LAPACKE_cgehrd) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgehrd" LAPACKE_zgehrd) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgejsv" LAPACKE_sgejsv) :int32
  (matrix_order :int)
  (joba :char)
  (jobu :char)
  (jobv :char)
  (jobr :char)
  (jobt :char)
  (jobp :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sva :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (stat :pointer)
  (istat :pointer))

(cffi:defcfun ("LAPACKE_dgejsv" LAPACKE_dgejsv) :int32
  (matrix_order :int)
  (joba :char)
  (jobu :char)
  (jobv :char)
  (jobr :char)
  (jobt :char)
  (jobp :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sva :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (stat :pointer)
  (istat :pointer))

(cffi:defcfun ("LAPACKE_sgelqf" LAPACKE_sgelqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgelqf" LAPACKE_dgelqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgelqf" LAPACKE_cgelqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgelqf" LAPACKE_zgelqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgels" LAPACKE_sgels) :int32
  (matrix_order :int)
  (trans :char)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dgels" LAPACKE_dgels) :int32
  (matrix_order :int)
  (trans :char)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cgels" LAPACKE_cgels) :int32
  (matrix_order :int)
  (trans :char)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zgels" LAPACKE_zgels) :int32
  (matrix_order :int)
  (trans :char)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sgelsd" LAPACKE_sgelsd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :float)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_dgelsd" LAPACKE_dgelsd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :double)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_cgelsd" LAPACKE_cgelsd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :float)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_zgelsd" LAPACKE_zgelsd) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :double)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_sgelss" LAPACKE_sgelss) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :float)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_dgelss" LAPACKE_dgelss) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :double)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_cgelss" LAPACKE_cgelss) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :float)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_zgelss" LAPACKE_zgelss) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (s :pointer)
  (rcond :double)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_sgelsy" LAPACKE_sgelsy) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (jpvt :pointer)
  (rcond :float)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_dgelsy" LAPACKE_dgelsy) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (jpvt :pointer)
  (rcond :double)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_cgelsy" LAPACKE_cgelsy) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (jpvt :pointer)
  (rcond :float)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_zgelsy" LAPACKE_zgelsy) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (jpvt :pointer)
  (rcond :double)
  (rank :pointer))

(cffi:defcfun ("LAPACKE_sgeqlf" LAPACKE_sgeqlf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgeqlf" LAPACKE_dgeqlf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgeqlf" LAPACKE_cgeqlf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgeqlf" LAPACKE_zgeqlf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgeqp3" LAPACKE_sgeqp3) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgeqp3" LAPACKE_dgeqp3) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgeqp3" LAPACKE_cgeqp3) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgeqp3" LAPACKE_zgeqp3) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgeqpf" LAPACKE_sgeqpf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgeqpf" LAPACKE_dgeqpf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgeqpf" LAPACKE_cgeqpf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgeqpf" LAPACKE_zgeqpf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (jpvt :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgeqrf" LAPACKE_sgeqrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgeqrf" LAPACKE_dgeqrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgeqrf" LAPACKE_cgeqrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgeqrf" LAPACKE_zgeqrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgeqrfp" LAPACKE_sgeqrfp) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgeqrfp" LAPACKE_dgeqrfp) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgeqrfp" LAPACKE_cgeqrfp) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgeqrfp" LAPACKE_zgeqrfp) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgerfs" LAPACKE_sgerfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dgerfs" LAPACKE_dgerfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cgerfs" LAPACKE_cgerfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zgerfs" LAPACKE_zgerfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sgerfsx" LAPACKE_sgerfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dgerfsx" LAPACKE_dgerfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_cgerfsx" LAPACKE_cgerfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zgerfsx" LAPACKE_zgerfsx) :int32
  (matrix_order :int)
  (trans :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_sgerqf" LAPACKE_sgerqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dgerqf" LAPACKE_dgerqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cgerqf" LAPACKE_cgerqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zgerqf" LAPACKE_zgerqf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sgesdd" LAPACKE_sgesdd) :int32
  (matrix_order :int)
  (jobz :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32))

(cffi:defcfun ("LAPACKE_dgesdd" LAPACKE_dgesdd) :int32
  (matrix_order :int)
  (jobz :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32))

(cffi:defcfun ("LAPACKE_cgesdd" LAPACKE_cgesdd) :int32
  (matrix_order :int)
  (jobz :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32))

(cffi:defcfun ("LAPACKE_zgesdd" LAPACKE_zgesdd) :int32
  (matrix_order :int)
  (jobz :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32))

(cffi:defcfun ("LAPACKE_sgesv" LAPACKE_sgesv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dgesv" LAPACKE_dgesv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cgesv" LAPACKE_cgesv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zgesv" LAPACKE_zgesv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dsgesv" LAPACKE_dsgesv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (iter :pointer))

(cffi:defcfun ("LAPACKE_zcgesv" LAPACKE_zcgesv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (iter :pointer))

(cffi:defcfun ("LAPACKE_sgesvd" LAPACKE_sgesvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobvt :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32)
  (superb :pointer))

(cffi:defcfun ("LAPACKE_dgesvd" LAPACKE_dgesvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobvt :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32)
  (superb :pointer))

(cffi:defcfun ("LAPACKE_cgesvd" LAPACKE_cgesvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobvt :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32)
  (superb :pointer))

(cffi:defcfun ("LAPACKE_zgesvd" LAPACKE_zgesvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobvt :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (u :pointer)
  (ldu :int32)
  (vt :pointer)
  (ldvt :int32)
  (superb :pointer))

(cffi:defcfun ("LAPACKE_sgesvj" LAPACKE_sgesvj) :int32
  (matrix_order :int)
  (joba :char)
  (jobu :char)
  (jobv :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sva :pointer)
  (mv :int32)
  (v :pointer)
  (ldv :int32)
  (stat :pointer))

(cffi:defcfun ("LAPACKE_dgesvj" LAPACKE_dgesvj) :int32
  (matrix_order :int)
  (joba :char)
  (jobu :char)
  (jobv :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (sva :pointer)
  (mv :int32)
  (v :pointer)
  (ldv :int32)
  (stat :pointer))

(cffi:defcfun ("LAPACKE_sgesvx" LAPACKE_sgesvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_dgesvx" LAPACKE_dgesvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_cgesvx" LAPACKE_cgesvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_zgesvx" LAPACKE_zgesvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer)
  (rpivot :pointer))

(cffi:defcfun ("LAPACKE_sgesvxx" LAPACKE_sgesvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dgesvxx" LAPACKE_dgesvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_cgesvxx" LAPACKE_cgesvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zgesvxx" LAPACKE_zgesvxx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (r :pointer)
  (c :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_sgetrf" LAPACKE_sgetrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dgetrf" LAPACKE_dgetrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_cgetrf" LAPACKE_cgetrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zgetrf" LAPACKE_zgetrf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_sgetri" LAPACKE_sgetri) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dgetri" LAPACKE_dgetri) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_cgetri" LAPACKE_cgetri) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zgetri" LAPACKE_zgetri) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_sgetrs" LAPACKE_sgetrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dgetrs" LAPACKE_dgetrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cgetrs" LAPACKE_cgetrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zgetrs" LAPACKE_zgetrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sggbak" LAPACKE_sggbak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (lscale :pointer)
  (rscale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_dggbak" LAPACKE_dggbak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (lscale :pointer)
  (rscale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_cggbak" LAPACKE_cggbak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (lscale :pointer)
  (rscale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_zggbak" LAPACKE_zggbak) :int32
  (matrix_order :int)
  (job :char)
  (side :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (lscale :pointer)
  (rscale :pointer)
  (m :int32)
  (v :pointer)
  (ldv :int32))

(cffi:defcfun ("LAPACKE_sggbal" LAPACKE_sggbal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer))

(cffi:defcfun ("LAPACKE_dggbal" LAPACKE_dggbal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer))

(cffi:defcfun ("LAPACKE_cggbal" LAPACKE_cggbal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer))

(cffi:defcfun ("LAPACKE_zggbal" LAPACKE_zggbal) :int32
  (matrix_order :int)
  (job :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer))

(cffi:defcfun ("LAPACKE_sgges" LAPACKE_sgges) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32))

(cffi:defcfun ("LAPACKE_dgges" LAPACKE_dgges) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32))

(cffi:defcfun ("LAPACKE_cgges" LAPACKE_cgges) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alpha :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32))

(cffi:defcfun ("LAPACKE_zgges" LAPACKE_zgges) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alpha :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32))

(cffi:defcfun ("LAPACKE_sggesx" LAPACKE_sggesx) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_dggesx" LAPACKE_dggesx) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_cggesx" LAPACKE_cggesx) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alpha :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_zggesx" LAPACKE_zggesx) :int32
  (matrix_order :int)
  (jobvsl :char)
  (jobvsr :char)
  (sort :char)
  (selctg :pointer)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (sdim :pointer)
  (alpha :pointer)
  (beta :pointer)
  (vsl :pointer)
  (ldvsl :int32)
  (vsr :pointer)
  (ldvsr :int32)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_sggev" LAPACKE_sggev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_dggev" LAPACKE_dggev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_cggev" LAPACKE_cggev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_zggev" LAPACKE_zggev) :int32
  (matrix_order :int)
  (jobvl :char)
  (jobvr :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32))

(cffi:defcfun ("LAPACKE_sggevx" LAPACKE_sggevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer)
  (abnrm :pointer)
  (bbnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_dggevx" LAPACKE_dggevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer)
  (abnrm :pointer)
  (bbnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_cggevx" LAPACKE_cggevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer)
  (abnrm :pointer)
  (bbnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_zggevx" LAPACKE_zggevx) :int32
  (matrix_order :int)
  (balanc :char)
  (jobvl :char)
  (jobvr :char)
  (sense :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (ilo :pointer)
  (ihi :pointer)
  (lscale :pointer)
  (rscale :pointer)
  (abnrm :pointer)
  (bbnrm :pointer)
  (rconde :pointer)
  (rcondv :pointer))

(cffi:defcfun ("LAPACKE_sggglm" LAPACKE_sggglm) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (d :pointer)
  (x :pointer)
  (y :pointer))

(cffi:defcfun ("LAPACKE_dggglm" LAPACKE_dggglm) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (d :pointer)
  (x :pointer)
  (y :pointer))

(cffi:defcfun ("LAPACKE_cggglm" LAPACKE_cggglm) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (d :pointer)
  (x :pointer)
  (y :pointer))

(cffi:defcfun ("LAPACKE_zggglm" LAPACKE_zggglm) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (d :pointer)
  (x :pointer)
  (y :pointer))

(cffi:defcfun ("LAPACKE_sgghrd" LAPACKE_sgghrd) :int32
  (matrix_order :int)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dgghrd" LAPACKE_dgghrd) :int32
  (matrix_order :int)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_cgghrd" LAPACKE_cgghrd) :int32
  (matrix_order :int)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zgghrd" LAPACKE_zgghrd) :int32
  (matrix_order :int)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sgglse" LAPACKE_sgglse) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (d :pointer)
  (x :pointer))

(cffi:defcfun ("LAPACKE_dgglse" LAPACKE_dgglse) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (d :pointer)
  (x :pointer))

(cffi:defcfun ("LAPACKE_cgglse" LAPACKE_cgglse) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (d :pointer)
  (x :pointer))

(cffi:defcfun ("LAPACKE_zgglse" LAPACKE_zgglse) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (d :pointer)
  (x :pointer))

(cffi:defcfun ("LAPACKE_sggqrf" LAPACKE_sggqrf) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_dggqrf" LAPACKE_dggqrf) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_cggqrf" LAPACKE_cggqrf) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_zggqrf" LAPACKE_zggqrf) :int32
  (matrix_order :int)
  (n :int32)
  (m :int32)
  (p :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_sggrqf" LAPACKE_sggrqf) :int32
  (matrix_order :int)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_dggrqf" LAPACKE_dggrqf) :int32
  (matrix_order :int)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_cggrqf" LAPACKE_cggrqf) :int32
  (matrix_order :int)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_zggrqf" LAPACKE_zggrqf) :int32
  (matrix_order :int)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (taua :pointer)
  (b :pointer)
  (ldb :int32)
  (taub :pointer))

(cffi:defcfun ("LAPACKE_sggsvd" LAPACKE_sggsvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (n :int32)
  (p :int32)
  (k :pointer)
  (l :pointer)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (iwork :pointer))

(cffi:defcfun ("LAPACKE_dggsvd" LAPACKE_dggsvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (n :int32)
  (p :int32)
  (k :pointer)
  (l :pointer)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (iwork :pointer))

(cffi:defcfun ("LAPACKE_cggsvd" LAPACKE_cggsvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (n :int32)
  (p :int32)
  (k :pointer)
  (l :pointer)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (iwork :pointer))

(cffi:defcfun ("LAPACKE_zggsvd" LAPACKE_zggsvd) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (n :int32)
  (p :int32)
  (k :pointer)
  (l :pointer)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (iwork :pointer))

(cffi:defcfun ("LAPACKE_sggsvp" LAPACKE_sggsvp) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :float)
  (tolb :float)
  (k :pointer)
  (l :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_dggsvp" LAPACKE_dggsvp) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :double)
  (tolb :double)
  (k :pointer)
  (l :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_cggsvp" LAPACKE_cggsvp) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :float)
  (tolb :float)
  (k :pointer)
  (l :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_zggsvp" LAPACKE_zggsvp) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :double)
  (tolb :double)
  (k :pointer)
  (l :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_sgtcon" LAPACKE_sgtcon) :int32
  (norm :char)
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dgtcon" LAPACKE_dgtcon) :int32
  (norm :char)
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cgtcon" LAPACKE_cgtcon) :int32
  (norm :char)
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zgtcon" LAPACKE_zgtcon) :int32
  (norm :char)
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_sgtrfs" LAPACKE_sgtrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dgtrfs" LAPACKE_dgtrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cgtrfs" LAPACKE_cgtrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zgtrfs" LAPACKE_zgtrfs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sgtsv" LAPACKE_sgtsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dgtsv" LAPACKE_dgtsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cgtsv" LAPACKE_cgtsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zgtsv" LAPACKE_zgtsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sgtsvx" LAPACKE_sgtsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dgtsvx" LAPACKE_dgtsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cgtsvx" LAPACKE_cgtsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zgtsvx" LAPACKE_zgtsvx) :int32
  (matrix_order :int)
  (fact :char)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (dlf :pointer)
  (df :pointer)
  (duf :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sgttrf" LAPACKE_sgttrf) :int32
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dgttrf" LAPACKE_dgttrf) :int32
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_cgttrf" LAPACKE_cgttrf) :int32
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zgttrf" LAPACKE_zgttrf) :int32
  (n :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_sgttrs" LAPACKE_sgttrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dgttrs" LAPACKE_dgttrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cgttrs" LAPACKE_cgttrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zgttrs" LAPACKE_zgttrs) :int32
  (matrix_order :int)
  (trans :char)
  (n :int32)
  (nrhs :int32)
  (dl :pointer)
  (d :pointer)
  (du :pointer)
  (du2 :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_chbev" LAPACKE_chbev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhbev" LAPACKE_zhbev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chbevd" LAPACKE_chbevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhbevd" LAPACKE_zhbevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chbevx" LAPACKE_chbevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (q :pointer)
  (ldq :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_zhbevx" LAPACKE_zhbevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (q :pointer)
  (ldq :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_chbgst" LAPACKE_chbgst) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (x :pointer)
  (ldx :int32))

(cffi:defcfun ("LAPACKE_zhbgst" LAPACKE_zhbgst) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (x :pointer)
  (ldx :int32))

(cffi:defcfun ("LAPACKE_chbgv" LAPACKE_chbgv) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhbgv" LAPACKE_zhbgv) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chbgvd" LAPACKE_chbgvd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhbgvd" LAPACKE_zhbgvd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chbgvx" LAPACKE_chbgvx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (q :pointer)
  (ldq :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_zhbgvx" LAPACKE_zhbgvx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (q :pointer)
  (ldq :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_chbtrd" LAPACKE_chbtrd) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_zhbtrd" LAPACKE_zhbtrd) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_checon" LAPACKE_checon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zhecon" LAPACKE_zhecon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cheequb" LAPACKE_cheequb) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zheequb" LAPACKE_zheequb) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cheev" LAPACKE_cheev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_zheev" LAPACKE_zheev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_cheevd" LAPACKE_cheevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_zheevd" LAPACKE_zheevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_cheevr" LAPACKE_cheevr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_zheevr" LAPACKE_zheevr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_cheevx" LAPACKE_cheevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_zheevx" LAPACKE_zheevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_chegst" LAPACKE_chegst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zhegst" LAPACKE_zhegst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_chegv" LAPACKE_chegv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_zhegv" LAPACKE_zhegv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_chegvd" LAPACKE_chegvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_zhegvd" LAPACKE_zhegvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_chegvx" LAPACKE_chegvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_zhegvx" LAPACKE_zhegvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_cherfs" LAPACKE_cherfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zherfs" LAPACKE_zherfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cherfsx" LAPACKE_cherfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zherfsx" LAPACKE_zherfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_chesv" LAPACKE_chesv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zhesv" LAPACKE_zhesv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_chesvx" LAPACKE_chesvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zhesvx" LAPACKE_zhesvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_chesvxx" LAPACKE_chesvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zhesvxx" LAPACKE_zhesvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_chetrd" LAPACKE_chetrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zhetrd" LAPACKE_zhetrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_chetrf" LAPACKE_chetrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zhetrf" LAPACKE_zhetrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_chetri" LAPACKE_chetri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zhetri" LAPACKE_zhetri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_chetrs" LAPACKE_chetrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zhetrs" LAPACKE_zhetrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_chfrk" LAPACKE_chfrk) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (trans :char)
  (n :int32)
  (k :int32)
  (alpha :float)
  (a :pointer)
  (lda :int32)
  (beta :float)
  (c :pointer))

(cffi:defcfun ("LAPACKE_zhfrk" LAPACKE_zhfrk) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (trans :char)
  (n :int32)
  (k :int32)
  (alpha :double)
  (a :pointer)
  (lda :int32)
  (beta :double)
  (c :pointer))

(cffi:defcfun ("LAPACKE_shgeqz" LAPACKE_shgeqz) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (t_arg9 :pointer)
  (ldt :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dhgeqz" LAPACKE_dhgeqz) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (t_arg9 :pointer)
  (ldt :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chgeqz" LAPACKE_chgeqz) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (t_arg9 :pointer)
  (ldt :int32)
  (alpha :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhgeqz" LAPACKE_zhgeqz) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (t_arg9 :pointer)
  (ldt :int32)
  (alpha :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chpcon" LAPACKE_chpcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zhpcon" LAPACKE_zhpcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_chpev" LAPACKE_chpev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhpev" LAPACKE_zhpev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chpevd" LAPACKE_chpevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhpevd" LAPACKE_zhpevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chpevx" LAPACKE_chpevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_zhpevx" LAPACKE_zhpevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_chpgst" LAPACKE_chpgst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer))

(cffi:defcfun ("LAPACKE_zhpgst" LAPACKE_zhpgst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer))

(cffi:defcfun ("LAPACKE_chpgv" LAPACKE_chpgv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhpgv" LAPACKE_zhpgv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chpgvd" LAPACKE_chpgvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhpgvd" LAPACKE_zhpgvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chpgvx" LAPACKE_chpgvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_zhpgvx" LAPACKE_zhpgvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_chprfs" LAPACKE_chprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zhprfs" LAPACKE_zhprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_chpsv" LAPACKE_chpsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zhpsv" LAPACKE_zhpsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_chpsvx" LAPACKE_chpsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zhpsvx" LAPACKE_zhpsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_chptrd" LAPACKE_chptrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zhptrd" LAPACKE_zhptrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_chptrf" LAPACKE_chptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zhptrf" LAPACKE_zhptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_chptri" LAPACKE_chptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zhptri" LAPACKE_zhptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_chptrs" LAPACKE_chptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zhptrs" LAPACKE_zhptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_shsein" LAPACKE_shsein) :int32
  (matrix_order :int)
  (job :char)
  (eigsrc :char)
  (initv :char)
  (select :pointer)
  (n :int32)
  (h :pointer)
  (ldh :int32)
  (wr :pointer)
  (wi :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer)
  (ifaill :pointer)
  (ifailr :pointer))

(cffi:defcfun ("LAPACKE_dhsein" LAPACKE_dhsein) :int32
  (matrix_order :int)
  (job :char)
  (eigsrc :char)
  (initv :char)
  (select :pointer)
  (n :int32)
  (h :pointer)
  (ldh :int32)
  (wr :pointer)
  (wi :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer)
  (ifaill :pointer)
  (ifailr :pointer))

(cffi:defcfun ("LAPACKE_chsein" LAPACKE_chsein) :int32
  (matrix_order :int)
  (job :char)
  (eigsrc :char)
  (initv :char)
  (select :pointer)
  (n :int32)
  (h :pointer)
  (ldh :int32)
  (w :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer)
  (ifaill :pointer)
  (ifailr :pointer))

(cffi:defcfun ("LAPACKE_zhsein" LAPACKE_zhsein) :int32
  (matrix_order :int)
  (job :char)
  (eigsrc :char)
  (initv :char)
  (select :pointer)
  (n :int32)
  (h :pointer)
  (ldh :int32)
  (w :pointer)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer)
  (ifaill :pointer)
  (ifailr :pointer))

(cffi:defcfun ("LAPACKE_shseqr" LAPACKE_shseqr) :int32
  (matrix_order :int)
  (job :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (wr :pointer)
  (wi :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dhseqr" LAPACKE_dhseqr) :int32
  (matrix_order :int)
  (job :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (wr :pointer)
  (wi :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_chseqr" LAPACKE_chseqr) :int32
  (matrix_order :int)
  (job :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zhseqr" LAPACKE_zhseqr) :int32
  (matrix_order :int)
  (job :char)
  (compz :char)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (h :pointer)
  (ldh :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sopgtr" LAPACKE_sopgtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_dopgtr" LAPACKE_dopgtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_sopmtr" LAPACKE_sopmtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dopmtr" LAPACKE_dopmtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sorgbr" LAPACKE_sorgbr) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dorgbr" LAPACKE_dorgbr) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sorghr" LAPACKE_sorghr) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dorghr" LAPACKE_dorghr) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sorglq" LAPACKE_sorglq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dorglq" LAPACKE_dorglq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sorgql" LAPACKE_sorgql) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dorgql" LAPACKE_dorgql) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sorgqr" LAPACKE_sorgqr) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dorgqr" LAPACKE_dorgqr) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sorgrq" LAPACKE_sorgrq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dorgrq" LAPACKE_dorgrq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sorgtr" LAPACKE_sorgtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dorgtr" LAPACKE_dorgtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_sormbr" LAPACKE_sormbr) :int32
  (matrix_order :int)
  (vect :char)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormbr" LAPACKE_dormbr) :int32
  (matrix_order :int)
  (vect :char)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sormhr" LAPACKE_sormhr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormhr" LAPACKE_dormhr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sormlq" LAPACKE_sormlq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormlq" LAPACKE_dormlq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sormql" LAPACKE_sormql) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormql" LAPACKE_dormql) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sormqr" LAPACKE_sormqr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormqr" LAPACKE_dormqr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sormrq" LAPACKE_sormrq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormrq" LAPACKE_dormrq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sormrz" LAPACKE_sormrz) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormrz" LAPACKE_dormrz) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_sormtr" LAPACKE_sormtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_dormtr" LAPACKE_dormtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_spbcon" LAPACKE_spbcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dpbcon" LAPACKE_dpbcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cpbcon" LAPACKE_cpbcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zpbcon" LAPACKE_zpbcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_spbequ" LAPACKE_spbequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dpbequ" LAPACKE_dpbequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cpbequ" LAPACKE_cpbequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zpbequ" LAPACKE_zpbequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_spbrfs" LAPACKE_spbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dpbrfs" LAPACKE_dpbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cpbrfs" LAPACKE_cpbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zpbrfs" LAPACKE_zpbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_spbstf" LAPACKE_spbstf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kb :int32)
  (bb :pointer)
  (ldbb :int32))

(cffi:defcfun ("LAPACKE_dpbstf" LAPACKE_dpbstf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kb :int32)
  (bb :pointer)
  (ldbb :int32))

(cffi:defcfun ("LAPACKE_cpbstf" LAPACKE_cpbstf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kb :int32)
  (bb :pointer)
  (ldbb :int32))

(cffi:defcfun ("LAPACKE_zpbstf" LAPACKE_zpbstf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kb :int32)
  (bb :pointer)
  (ldbb :int32))

(cffi:defcfun ("LAPACKE_spbsv" LAPACKE_spbsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dpbsv" LAPACKE_dpbsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cpbsv" LAPACKE_cpbsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zpbsv" LAPACKE_zpbsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_spbsvx" LAPACKE_spbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dpbsvx" LAPACKE_dpbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cpbsvx" LAPACKE_cpbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zpbsvx" LAPACKE_zpbsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (afb :pointer)
  (ldafb :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_spbtrf" LAPACKE_spbtrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32))

(cffi:defcfun ("LAPACKE_dpbtrf" LAPACKE_dpbtrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32))

(cffi:defcfun ("LAPACKE_cpbtrf" LAPACKE_cpbtrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32))

(cffi:defcfun ("LAPACKE_zpbtrf" LAPACKE_zpbtrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32))

(cffi:defcfun ("LAPACKE_spbtrs" LAPACKE_spbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dpbtrs" LAPACKE_dpbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cpbtrs" LAPACKE_cpbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zpbtrs" LAPACKE_zpbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_spftrf" LAPACKE_spftrf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_dpftrf" LAPACKE_dpftrf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_cpftrf" LAPACKE_cpftrf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_zpftrf" LAPACKE_zpftrf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_spftri" LAPACKE_spftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_dpftri" LAPACKE_dpftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_cpftri" LAPACKE_cpftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_zpftri" LAPACKE_zpftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_spftrs" LAPACKE_spftrs) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dpftrs" LAPACKE_dpftrs) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cpftrs" LAPACKE_cpftrs) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zpftrs" LAPACKE_zpftrs) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_spocon" LAPACKE_spocon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dpocon" LAPACKE_dpocon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cpocon" LAPACKE_cpocon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zpocon" LAPACKE_zpocon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_spoequ" LAPACKE_spoequ) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dpoequ" LAPACKE_dpoequ) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cpoequ" LAPACKE_cpoequ) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zpoequ" LAPACKE_zpoequ) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_spoequb" LAPACKE_spoequb) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dpoequb" LAPACKE_dpoequb) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cpoequb" LAPACKE_cpoequb) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zpoequb" LAPACKE_zpoequb) :int32
  (matrix_order :int)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_sporfs" LAPACKE_sporfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dporfs" LAPACKE_dporfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cporfs" LAPACKE_cporfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zporfs" LAPACKE_zporfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sporfsx" LAPACKE_sporfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dporfsx" LAPACKE_dporfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_cporfsx" LAPACKE_cporfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zporfsx" LAPACKE_zporfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_sposv" LAPACKE_sposv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dposv" LAPACKE_dposv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cposv" LAPACKE_cposv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zposv" LAPACKE_zposv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dsposv" LAPACKE_dsposv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (iter :pointer))

(cffi:defcfun ("LAPACKE_zcposv" LAPACKE_zcposv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (iter :pointer))

(cffi:defcfun ("LAPACKE_sposvx" LAPACKE_sposvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dposvx" LAPACKE_dposvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cposvx" LAPACKE_cposvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zposvx" LAPACKE_zposvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sposvxx" LAPACKE_sposvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dposvxx" LAPACKE_dposvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_cposvxx" LAPACKE_cposvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zposvxx" LAPACKE_zposvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_spotrf" LAPACKE_spotrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_dpotrf" LAPACKE_dpotrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_cpotrf" LAPACKE_cpotrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_zpotrf" LAPACKE_zpotrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_spotri" LAPACKE_spotri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_dpotri" LAPACKE_dpotri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_cpotri" LAPACKE_cpotri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_zpotri" LAPACKE_zpotri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_spotrs" LAPACKE_spotrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dpotrs" LAPACKE_dpotrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cpotrs" LAPACKE_cpotrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zpotrs" LAPACKE_zpotrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sppcon" LAPACKE_sppcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dppcon" LAPACKE_dppcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cppcon" LAPACKE_cppcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zppcon" LAPACKE_zppcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_sppequ" LAPACKE_sppequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dppequ" LAPACKE_dppequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_cppequ" LAPACKE_cppequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zppequ" LAPACKE_zppequ) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_spprfs" LAPACKE_spprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dpprfs" LAPACKE_dpprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cpprfs" LAPACKE_cpprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zpprfs" LAPACKE_zpprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sppsv" LAPACKE_sppsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dppsv" LAPACKE_dppsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cppsv" LAPACKE_cppsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zppsv" LAPACKE_zppsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sppsvx" LAPACKE_sppsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dppsvx" LAPACKE_dppsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cppsvx" LAPACKE_cppsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zppsvx" LAPACKE_zppsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_spptrf" LAPACKE_spptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_dpptrf" LAPACKE_dpptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_cpptrf" LAPACKE_cpptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_zpptrf" LAPACKE_zpptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_spptri" LAPACKE_spptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_dpptri" LAPACKE_dpptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_cpptri" LAPACKE_cpptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_zpptri" LAPACKE_zpptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_spptrs" LAPACKE_spptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dpptrs" LAPACKE_dpptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cpptrs" LAPACKE_cpptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zpptrs" LAPACKE_zpptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_spstrf" LAPACKE_spstrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (piv :pointer)
  (rank :pointer)
  (tol :float))

(cffi:defcfun ("LAPACKE_dpstrf" LAPACKE_dpstrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (piv :pointer)
  (rank :pointer)
  (tol :double))

(cffi:defcfun ("LAPACKE_cpstrf" LAPACKE_cpstrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (piv :pointer)
  (rank :pointer)
  (tol :float))

(cffi:defcfun ("LAPACKE_zpstrf" LAPACKE_zpstrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (piv :pointer)
  (rank :pointer)
  (tol :double))

(cffi:defcfun ("LAPACKE_sptcon" LAPACKE_sptcon) :int32
  (n :int32)
  (d :pointer)
  (e :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dptcon" LAPACKE_dptcon) :int32
  (n :int32)
  (d :pointer)
  (e :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cptcon" LAPACKE_cptcon) :int32
  (n :int32)
  (d :pointer)
  (e :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zptcon" LAPACKE_zptcon) :int32
  (n :int32)
  (d :pointer)
  (e :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_spteqr" LAPACKE_spteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dpteqr" LAPACKE_dpteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_cpteqr" LAPACKE_cpteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zpteqr" LAPACKE_zpteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sptrfs" LAPACKE_sptrfs) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dptrfs" LAPACKE_dptrfs) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cptrfs" LAPACKE_cptrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zptrfs" LAPACKE_zptrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sptsv" LAPACKE_sptsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dptsv" LAPACKE_dptsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cptsv" LAPACKE_cptsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zptsv" LAPACKE_zptsv) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sptsvx" LAPACKE_sptsvx) :int32
  (matrix_order :int)
  (fact :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dptsvx" LAPACKE_dptsvx) :int32
  (matrix_order :int)
  (fact :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cptsvx" LAPACKE_cptsvx) :int32
  (matrix_order :int)
  (fact :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zptsvx" LAPACKE_zptsvx) :int32
  (matrix_order :int)
  (fact :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (df :pointer)
  (ef :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_spttrf" LAPACKE_spttrf) :int32
  (n :int32)
  (d :pointer)
  (e :pointer))

(cffi:defcfun ("LAPACKE_dpttrf" LAPACKE_dpttrf) :int32
  (n :int32)
  (d :pointer)
  (e :pointer))

(cffi:defcfun ("LAPACKE_cpttrf" LAPACKE_cpttrf) :int32
  (n :int32)
  (d :pointer)
  (e :pointer))

(cffi:defcfun ("LAPACKE_zpttrf" LAPACKE_zpttrf) :int32
  (n :int32)
  (d :pointer)
  (e :pointer))

(cffi:defcfun ("LAPACKE_spttrs" LAPACKE_spttrs) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dpttrs" LAPACKE_dpttrs) :int32
  (matrix_order :int)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cpttrs" LAPACKE_cpttrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zpttrs" LAPACKE_zpttrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (d :pointer)
  (e :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ssbev" LAPACKE_ssbev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dsbev" LAPACKE_dsbev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_ssbevd" LAPACKE_ssbevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dsbevd" LAPACKE_dsbevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_ssbevx" LAPACKE_ssbevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (q :pointer)
  (ldq :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_dsbevx" LAPACKE_dsbevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (q :pointer)
  (ldq :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_ssbgst" LAPACKE_ssbgst) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (x :pointer)
  (ldx :int32))

(cffi:defcfun ("LAPACKE_dsbgst" LAPACKE_dsbgst) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (x :pointer)
  (ldx :int32))

(cffi:defcfun ("LAPACKE_ssbgv" LAPACKE_ssbgv) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dsbgv" LAPACKE_dsbgv) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_ssbgvd" LAPACKE_ssbgvd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dsbgvd" LAPACKE_dsbgvd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_ssbgvx" LAPACKE_ssbgvx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (q :pointer)
  (ldq :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_dsbgvx" LAPACKE_dsbgvx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ka :int32)
  (kb :int32)
  (ab :pointer)
  (ldab :int32)
  (bb :pointer)
  (ldbb :int32)
  (q :pointer)
  (ldq :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_ssbtrd" LAPACKE_ssbtrd) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_dsbtrd" LAPACKE_dsbtrd) :int32
  (matrix_order :int)
  (vect :char)
  (uplo :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (d :pointer)
  (e :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_ssfrk" LAPACKE_ssfrk) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (trans :char)
  (n :int32)
  (k :int32)
  (alpha :float)
  (a :pointer)
  (lda :int32)
  (beta :float)
  (c :pointer))

(cffi:defcfun ("LAPACKE_dsfrk" LAPACKE_dsfrk) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (trans :char)
  (n :int32)
  (k :int32)
  (alpha :double)
  (a :pointer)
  (lda :int32)
  (beta :double)
  (c :pointer))

(cffi:defcfun ("LAPACKE_sspcon" LAPACKE_sspcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dspcon" LAPACKE_dspcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_cspcon" LAPACKE_cspcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zspcon" LAPACKE_zspcon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_sspev" LAPACKE_sspev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dspev" LAPACKE_dspev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sspevd" LAPACKE_sspevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dspevd" LAPACKE_dspevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sspevx" LAPACKE_sspevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_dspevx" LAPACKE_dspevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_sspgst" LAPACKE_sspgst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer))

(cffi:defcfun ("LAPACKE_dspgst" LAPACKE_dspgst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer))

(cffi:defcfun ("LAPACKE_sspgv" LAPACKE_sspgv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dspgv" LAPACKE_dspgv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sspgvd" LAPACKE_sspgvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dspgvd" LAPACKE_dspgvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sspgvx" LAPACKE_sspgvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_dspgvx" LAPACKE_dspgvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (bp :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_ssprfs" LAPACKE_ssprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dsprfs" LAPACKE_dsprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_csprfs" LAPACKE_csprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zsprfs" LAPACKE_zsprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_sspsv" LAPACKE_sspsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dspsv" LAPACKE_dspsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_cspsv" LAPACKE_cspsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zspsv" LAPACKE_zspsv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sspsvx" LAPACKE_sspsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dspsvx" LAPACKE_dspsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_cspsvx" LAPACKE_cspsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zspsvx" LAPACKE_zspsvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (afp :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ssptrd" LAPACKE_ssptrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dsptrd" LAPACKE_dsptrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_ssptrf" LAPACKE_ssptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dsptrf" LAPACKE_dsptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_csptrf" LAPACKE_csptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zsptrf" LAPACKE_zsptrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_ssptri" LAPACKE_ssptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dsptri" LAPACKE_dsptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_csptri" LAPACKE_csptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zsptri" LAPACKE_zsptri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_ssptrs" LAPACKE_ssptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dsptrs" LAPACKE_dsptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_csptrs" LAPACKE_csptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zsptrs" LAPACKE_zsptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_sstebz" LAPACKE_sstebz) :int32
  (range :char)
  (order :char)
  (n :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (d :pointer)
  (e :pointer)
  (m :pointer)
  (nsplit :pointer)
  (w :pointer)
  (iblock :pointer)
  (isplit :pointer))

(cffi:defcfun ("LAPACKE_dstebz" LAPACKE_dstebz) :int32
  (range :char)
  (order :char)
  (n :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (d :pointer)
  (e :pointer)
  (m :pointer)
  (nsplit :pointer)
  (w :pointer)
  (iblock :pointer)
  (isplit :pointer))

(cffi:defcfun ("LAPACKE_sstedc" LAPACKE_sstedc) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dstedc" LAPACKE_dstedc) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_cstedc" LAPACKE_cstedc) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zstedc" LAPACKE_zstedc) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sstegr" LAPACKE_sstegr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_dstegr" LAPACKE_dstegr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_cstegr" LAPACKE_cstegr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_zstegr" LAPACKE_zstegr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_sstein" LAPACKE_sstein) :int32
  (matrix_order :int)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (m :int32)
  (w :pointer)
  (iblock :pointer)
  (isplit :pointer)
  (z :pointer)
  (ldz :int32)
  (ifailv :pointer))

(cffi:defcfun ("LAPACKE_dstein" LAPACKE_dstein) :int32
  (matrix_order :int)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (m :int32)
  (w :pointer)
  (iblock :pointer)
  (isplit :pointer)
  (z :pointer)
  (ldz :int32)
  (ifailv :pointer))

(cffi:defcfun ("LAPACKE_cstein" LAPACKE_cstein) :int32
  (matrix_order :int)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (m :int32)
  (w :pointer)
  (iblock :pointer)
  (isplit :pointer)
  (z :pointer)
  (ldz :int32)
  (ifailv :pointer))

(cffi:defcfun ("LAPACKE_zstein" LAPACKE_zstein) :int32
  (matrix_order :int)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (m :int32)
  (w :pointer)
  (iblock :pointer)
  (isplit :pointer)
  (z :pointer)
  (ldz :int32)
  (ifailv :pointer))

(cffi:defcfun ("LAPACKE_sstemr" LAPACKE_sstemr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (nzc :int32)
  (isuppz :pointer)
  (tryrac :pointer))

(cffi:defcfun ("LAPACKE_dstemr" LAPACKE_dstemr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (nzc :int32)
  (isuppz :pointer)
  (tryrac :pointer))

(cffi:defcfun ("LAPACKE_cstemr" LAPACKE_cstemr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (nzc :int32)
  (isuppz :pointer)
  (tryrac :pointer))

(cffi:defcfun ("LAPACKE_zstemr" LAPACKE_zstemr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (nzc :int32)
  (isuppz :pointer)
  (tryrac :pointer))

(cffi:defcfun ("LAPACKE_ssteqr" LAPACKE_ssteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dsteqr" LAPACKE_dsteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_csteqr" LAPACKE_csteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_zsteqr" LAPACKE_zsteqr) :int32
  (matrix_order :int)
  (compz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_ssterf" LAPACKE_ssterf) :int32
  (n :int32)
  (d :pointer)
  (e :pointer))

(cffi:defcfun ("LAPACKE_dsterf" LAPACKE_dsterf) :int32
  (n :int32)
  (d :pointer)
  (e :pointer))

(cffi:defcfun ("LAPACKE_sstev" LAPACKE_sstev) :int32
  (matrix_order :int)
  (jobz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dstev" LAPACKE_dstev) :int32
  (matrix_order :int)
  (jobz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sstevd" LAPACKE_sstevd) :int32
  (matrix_order :int)
  (jobz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_dstevd" LAPACKE_dstevd) :int32
  (matrix_order :int)
  (jobz :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (z :pointer)
  (ldz :int32))

(cffi:defcfun ("LAPACKE_sstevr" LAPACKE_sstevr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_dstevr" LAPACKE_dstevr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_sstevx" LAPACKE_sstevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_dstevx" LAPACKE_dstevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (n :int32)
  (d :pointer)
  (e :pointer)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_ssycon" LAPACKE_ssycon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dsycon" LAPACKE_dsycon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_csycon" LAPACKE_csycon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (anorm :float)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_zsycon" LAPACKE_zsycon) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (anorm :double)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_ssyequb" LAPACKE_ssyequb) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_dsyequb" LAPACKE_dsyequb) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_csyequb" LAPACKE_csyequb) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_zsyequb" LAPACKE_zsyequb) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (s :pointer)
  (scond :pointer)
  (amax :pointer))

(cffi:defcfun ("LAPACKE_ssyev" LAPACKE_ssyev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_dsyev" LAPACKE_dsyev) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_ssyevd" LAPACKE_ssyevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_dsyevd" LAPACKE_dsyevd) :int32
  (matrix_order :int)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_ssyevr" LAPACKE_ssyevr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_dsyevr" LAPACKE_dsyevr) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (isuppz :pointer))

(cffi:defcfun ("LAPACKE_ssyevx" LAPACKE_ssyevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_dsyevx" LAPACKE_dsyevx) :int32
  (matrix_order :int)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_ssygst" LAPACKE_ssygst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dsygst" LAPACKE_dsygst) :int32
  (matrix_order :int)
  (itype :int32)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ssygv" LAPACKE_ssygv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_dsygv" LAPACKE_dsygv) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_ssygvd" LAPACKE_ssygvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_dsygvd" LAPACKE_dsygvd) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (w :pointer))

(cffi:defcfun ("LAPACKE_ssygvx" LAPACKE_ssygvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :float)
  (vu :float)
  (il :int32)
  (iu :int32)
  (abstol :float)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_dsygvx" LAPACKE_dsygvx) :int32
  (matrix_order :int)
  (itype :int32)
  (jobz :char)
  (range :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :double)
  (vu :double)
  (il :int32)
  (iu :int32)
  (abstol :double)
  (m :pointer)
  (w :pointer)
  (z :pointer)
  (ldz :int32)
  (ifail :pointer))

(cffi:defcfun ("LAPACKE_ssyrfs" LAPACKE_ssyrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dsyrfs" LAPACKE_dsyrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_csyrfs" LAPACKE_csyrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zsyrfs" LAPACKE_zsyrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ssyrfsx" LAPACKE_ssyrfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dsyrfsx" LAPACKE_dsyrfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_csyrfsx" LAPACKE_csyrfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zsyrfsx" LAPACKE_zsyrfsx) :int32
  (matrix_order :int)
  (uplo :char)
  (equed :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_ssysv" LAPACKE_ssysv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dsysv" LAPACKE_dsysv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_csysv" LAPACKE_csysv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zsysv" LAPACKE_zsysv) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ssysvx" LAPACKE_ssysvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dsysvx" LAPACKE_dsysvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_csysvx" LAPACKE_csysvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_zsysvx" LAPACKE_zsysvx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ssysvxx" LAPACKE_ssysvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_dsysvxx" LAPACKE_dsysvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_csysvxx" LAPACKE_csysvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_zsysvxx" LAPACKE_zsysvxx) :int32
  (matrix_order :int)
  (fact :char)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (af :pointer)
  (ldaf :int32)
  (ipiv :pointer)
  (equed :string)
  (s :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (rcond :pointer)
  (rpvgrw :pointer)
  (berr :pointer)
  (n_err_bnds :int32)
  (err_bnds_norm :pointer)
  (err_bnds_comp :pointer)
  (nparams :int32)
  (params :pointer))

(cffi:defcfun ("LAPACKE_ssytrd" LAPACKE_ssytrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dsytrd" LAPACKE_dsytrd) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (d :pointer)
  (e :pointer)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_ssytrf" LAPACKE_ssytrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dsytrf" LAPACKE_dsytrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_csytrf" LAPACKE_csytrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zsytrf" LAPACKE_zsytrf) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_ssytri" LAPACKE_ssytri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_dsytri" LAPACKE_dsytri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_csytri" LAPACKE_csytri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_zsytri" LAPACKE_zsytri) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer))

(cffi:defcfun ("LAPACKE_ssytrs" LAPACKE_ssytrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dsytrs" LAPACKE_dsytrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_csytrs" LAPACKE_csytrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_zsytrs" LAPACKE_zsytrs) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (ipiv :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_stbcon" LAPACKE_stbcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dtbcon" LAPACKE_dtbcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_ctbcon" LAPACKE_ctbcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_ztbcon" LAPACKE_ztbcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (ab :pointer)
  (ldab :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_stbrfs" LAPACKE_stbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dtbrfs" LAPACKE_dtbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ctbrfs" LAPACKE_ctbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ztbrfs" LAPACKE_ztbrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_stbtrs" LAPACKE_stbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dtbtrs" LAPACKE_dtbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ctbtrs" LAPACKE_ctbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ztbtrs" LAPACKE_ztbtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (kd :int32)
  (nrhs :int32)
  (ab :pointer)
  (ldab :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_stfsm" LAPACKE_stfsm) :int32
  (matrix_order :int)
  (transr :char)
  (side :char)
  (uplo :char)
  (trans :char)
  (diag :char)
  (m :int32)
  (n :int32)
  (alpha :float)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dtfsm" LAPACKE_dtfsm) :int32
  (matrix_order :int)
  (transr :char)
  (side :char)
  (uplo :char)
  (trans :char)
  (diag :char)
  (m :int32)
  (n :int32)
  (alpha :double)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ctfsm" LAPACKE_ctfsm) :int32
  (matrix_order :int)
  (transr :char)
  (side :char)
  (uplo :char)
  (trans :char)
  (diag :char)
  (m :int32)
  (n :int32)
  (alpha :pointer)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ztfsm" LAPACKE_ztfsm) :int32
  (matrix_order :int)
  (transr :char)
  (side :char)
  (uplo :char)
  (trans :char)
  (diag :char)
  (m :int32)
  (n :int32)
  (alpha :pointer)
  (a :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_stftri" LAPACKE_stftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_dtftri" LAPACKE_dtftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_ctftri" LAPACKE_ctftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_ztftri" LAPACKE_ztftri) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer))

(cffi:defcfun ("LAPACKE_stfttp" LAPACKE_stfttp) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_dtfttp" LAPACKE_dtfttp) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_ctfttp" LAPACKE_ctfttp) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_ztfttp" LAPACKE_ztfttp) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_stfttr" LAPACKE_stfttr) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_dtfttr" LAPACKE_dtfttr) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_ctfttr" LAPACKE_ctfttr) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_ztfttr" LAPACKE_ztfttr) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (arf :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_stgevc" LAPACKE_stgevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (s :pointer)
  (lds :int32)
  (p :pointer)
  (ldp :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_dtgevc" LAPACKE_dtgevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (s :pointer)
  (lds :int32)
  (p :pointer)
  (ldp :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ctgevc" LAPACKE_ctgevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (s :pointer)
  (lds :int32)
  (p :pointer)
  (ldp :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ztgevc" LAPACKE_ztgevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (s :pointer)
  (lds :int32)
  (p :pointer)
  (ldp :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_stgexc" LAPACKE_stgexc) :int32
  (matrix_order :int)
  (wantq :int32)
  (wantz :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (ifst :pointer)
  (ilst :pointer))

(cffi:defcfun ("LAPACKE_dtgexc" LAPACKE_dtgexc) :int32
  (matrix_order :int)
  (wantq :int32)
  (wantz :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (ifst :pointer)
  (ilst :pointer))

(cffi:defcfun ("LAPACKE_ctgexc" LAPACKE_ctgexc) :int32
  (matrix_order :int)
  (wantq :int32)
  (wantz :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (ifst :int32)
  (ilst :int32))

(cffi:defcfun ("LAPACKE_ztgexc" LAPACKE_ztgexc) :int32
  (matrix_order :int)
  (wantq :int32)
  (wantz :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (ifst :int32)
  (ilst :int32))

(cffi:defcfun ("LAPACKE_stgsen" LAPACKE_stgsen) :int32
  (matrix_order :int)
  (ijob :int32)
  (wantq :int32)
  (wantz :int32)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (m :pointer)
  (pl :pointer)
  (pr :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_dtgsen" LAPACKE_dtgsen) :int32
  (matrix_order :int)
  (ijob :int32)
  (wantq :int32)
  (wantz :int32)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alphar :pointer)
  (alphai :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (m :pointer)
  (pl :pointer)
  (pr :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_ctgsen" LAPACKE_ctgsen) :int32
  (matrix_order :int)
  (ijob :int32)
  (wantq :int32)
  (wantz :int32)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (m :pointer)
  (pl :pointer)
  (pr :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_ztgsen" LAPACKE_ztgsen) :int32
  (matrix_order :int)
  (ijob :int32)
  (wantq :int32)
  (wantz :int32)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (alpha :pointer)
  (beta :pointer)
  (q :pointer)
  (ldq :int32)
  (z :pointer)
  (ldz :int32)
  (m :pointer)
  (pl :pointer)
  (pr :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_stgsja" LAPACKE_stgsja) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :float)
  (tolb :float)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (ncycle :pointer))

(cffi:defcfun ("LAPACKE_dtgsja" LAPACKE_dtgsja) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :double)
  (tolb :double)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (ncycle :pointer))

(cffi:defcfun ("LAPACKE_ctgsja" LAPACKE_ctgsja) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :float)
  (tolb :float)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (ncycle :pointer))

(cffi:defcfun ("LAPACKE_ztgsja" LAPACKE_ztgsja) :int32
  (matrix_order :int)
  (jobu :char)
  (jobv :char)
  (jobq :char)
  (m :int32)
  (p :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (tola :double)
  (tolb :double)
  (alpha :pointer)
  (beta :pointer)
  (u :pointer)
  (ldu :int32)
  (v :pointer)
  (ldv :int32)
  (q :pointer)
  (ldq :int32)
  (ncycle :pointer))

(cffi:defcfun ("LAPACKE_stgsna" LAPACKE_stgsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (dif :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_dtgsna" LAPACKE_dtgsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (dif :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ctgsna" LAPACKE_ctgsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (dif :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ztgsna" LAPACKE_ztgsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (dif :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_stgsyl" LAPACKE_stgsyl) :int32
  (matrix_order :int)
  (trans :char)
  (ijob :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (d :pointer)
  (ldd :int32)
  (e :pointer)
  (lde :int32)
  (f :pointer)
  (ldf :int32)
  (scale :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_dtgsyl" LAPACKE_dtgsyl) :int32
  (matrix_order :int)
  (trans :char)
  (ijob :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (d :pointer)
  (ldd :int32)
  (e :pointer)
  (lde :int32)
  (f :pointer)
  (ldf :int32)
  (scale :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_ctgsyl" LAPACKE_ctgsyl) :int32
  (matrix_order :int)
  (trans :char)
  (ijob :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (d :pointer)
  (ldd :int32)
  (e :pointer)
  (lde :int32)
  (f :pointer)
  (ldf :int32)
  (scale :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_ztgsyl" LAPACKE_ztgsyl) :int32
  (matrix_order :int)
  (trans :char)
  (ijob :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (d :pointer)
  (ldd :int32)
  (e :pointer)
  (lde :int32)
  (f :pointer)
  (ldf :int32)
  (scale :pointer)
  (dif :pointer))

(cffi:defcfun ("LAPACKE_stpcon" LAPACKE_stpcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dtpcon" LAPACKE_dtpcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_ctpcon" LAPACKE_ctpcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_ztpcon" LAPACKE_ztpcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_stprfs" LAPACKE_stprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dtprfs" LAPACKE_dtprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ctprfs" LAPACKE_ctprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ztprfs" LAPACKE_ztprfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_stptri" LAPACKE_stptri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_dtptri" LAPACKE_dtptri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_ctptri" LAPACKE_ctptri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_ztptri" LAPACKE_ztptri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_stptrs" LAPACKE_stptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dtptrs" LAPACKE_dtptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ctptrs" LAPACKE_ctptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ztptrs" LAPACKE_ztptrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (ap :pointer)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_stpttf" LAPACKE_stpttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_dtpttf" LAPACKE_dtpttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_ctpttf" LAPACKE_ctpttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_ztpttf" LAPACKE_ztpttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_stpttr" LAPACKE_stpttr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_dtpttr" LAPACKE_dtpttr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_ctpttr" LAPACKE_ctpttr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_ztpttr" LAPACKE_ztpttr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_strcon" LAPACKE_strcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_dtrcon" LAPACKE_dtrcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_ctrcon" LAPACKE_ctrcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_ztrcon" LAPACKE_ztrcon) :int32
  (matrix_order :int)
  (norm :char)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (rcond :pointer))

(cffi:defcfun ("LAPACKE_strevc" LAPACKE_strevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_dtrevc" LAPACKE_dtrevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ctrevc" LAPACKE_ctrevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ztrevc" LAPACKE_ztrevc) :int32
  (matrix_order :int)
  (side :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_strexc" LAPACKE_strexc) :int32
  (matrix_order :int)
  (compq :char)
  (n :int32)
  (t_arg3 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (ifst :pointer)
  (ilst :pointer))

(cffi:defcfun ("LAPACKE_dtrexc" LAPACKE_dtrexc) :int32
  (matrix_order :int)
  (compq :char)
  (n :int32)
  (t_arg3 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (ifst :pointer)
  (ilst :pointer))

(cffi:defcfun ("LAPACKE_ctrexc" LAPACKE_ctrexc) :int32
  (matrix_order :int)
  (compq :char)
  (n :int32)
  (t_arg3 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (ifst :int32)
  (ilst :int32))

(cffi:defcfun ("LAPACKE_ztrexc" LAPACKE_ztrexc) :int32
  (matrix_order :int)
  (compq :char)
  (n :int32)
  (t_arg3 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (ifst :int32)
  (ilst :int32))

(cffi:defcfun ("LAPACKE_strrfs" LAPACKE_strrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_dtrrfs" LAPACKE_dtrrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ctrrfs" LAPACKE_ctrrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_ztrrfs" LAPACKE_ztrrfs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (x :pointer)
  (ldx :int32)
  (ferr :pointer)
  (berr :pointer))

(cffi:defcfun ("LAPACKE_strsen" LAPACKE_strsen) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (wr :pointer)
  (wi :pointer)
  (m :pointer)
  (s :pointer)
  (sep :pointer))

(cffi:defcfun ("LAPACKE_dtrsen" LAPACKE_dtrsen) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (wr :pointer)
  (wi :pointer)
  (m :pointer)
  (s :pointer)
  (sep :pointer))

(cffi:defcfun ("LAPACKE_ctrsen" LAPACKE_ctrsen) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (w :pointer)
  (m :pointer)
  (s :pointer)
  (sep :pointer))

(cffi:defcfun ("LAPACKE_ztrsen" LAPACKE_ztrsen) :int32
  (matrix_order :int)
  (job :char)
  (compq :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (q :pointer)
  (ldq :int32)
  (w :pointer)
  (m :pointer)
  (s :pointer)
  (sep :pointer))

(cffi:defcfun ("LAPACKE_strsna" LAPACKE_strsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (sep :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_dtrsna" LAPACKE_dtrsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (sep :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ctrsna" LAPACKE_ctrsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (sep :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_ztrsna" LAPACKE_ztrsna) :int32
  (matrix_order :int)
  (job :char)
  (howmny :char)
  (select :pointer)
  (n :int32)
  (t_arg5 :pointer)
  (ldt :int32)
  (vl :pointer)
  (ldvl :int32)
  (vr :pointer)
  (ldvr :int32)
  (s :pointer)
  (sep :pointer)
  (mm :int32)
  (m :pointer))

(cffi:defcfun ("LAPACKE_strsyl" LAPACKE_strsyl) :int32
  (matrix_order :int)
  (trana :char)
  (tranb :char)
  (isgn :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_dtrsyl" LAPACKE_dtrsyl) :int32
  (matrix_order :int)
  (trana :char)
  (tranb :char)
  (isgn :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_ctrsyl" LAPACKE_ctrsyl) :int32
  (matrix_order :int)
  (trana :char)
  (tranb :char)
  (isgn :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_ztrsyl" LAPACKE_ztrsyl) :int32
  (matrix_order :int)
  (trana :char)
  (tranb :char)
  (isgn :int32)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32)
  (c :pointer)
  (ldc :int32)
  (scale :pointer))

(cffi:defcfun ("LAPACKE_strtri" LAPACKE_strtri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_dtrtri" LAPACKE_dtrtri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_ctrtri" LAPACKE_ctrtri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_ztrtri" LAPACKE_ztrtri) :int32
  (matrix_order :int)
  (uplo :char)
  (diag :char)
  (n :int32)
  (a :pointer)
  (lda :int32))

(cffi:defcfun ("LAPACKE_strtrs" LAPACKE_strtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_dtrtrs" LAPACKE_dtrtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ctrtrs" LAPACKE_ctrtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_ztrtrs" LAPACKE_ztrtrs) :int32
  (matrix_order :int)
  (uplo :char)
  (trans :char)
  (diag :char)
  (n :int32)
  (nrhs :int32)
  (a :pointer)
  (lda :int32)
  (b :pointer)
  (ldb :int32))

(cffi:defcfun ("LAPACKE_strttf" LAPACKE_strttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_dtrttf" LAPACKE_dtrttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_ctrttf" LAPACKE_ctrttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_ztrttf" LAPACKE_ztrttf) :int32
  (matrix_order :int)
  (transr :char)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (arf :pointer))

(cffi:defcfun ("LAPACKE_strttp" LAPACKE_strttp) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_dtrttp" LAPACKE_dtrttp) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_ctrttp" LAPACKE_ctrttp) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_ztrttp" LAPACKE_ztrttp) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (ap :pointer))

(cffi:defcfun ("LAPACKE_stzrzf" LAPACKE_stzrzf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_dtzrzf" LAPACKE_dtzrzf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_ctzrzf" LAPACKE_ctzrzf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_ztzrzf" LAPACKE_ztzrzf) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cungbr" LAPACKE_cungbr) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zungbr" LAPACKE_zungbr) :int32
  (matrix_order :int)
  (vect :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cunghr" LAPACKE_cunghr) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zunghr" LAPACKE_zunghr) :int32
  (matrix_order :int)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cunglq" LAPACKE_cunglq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zunglq" LAPACKE_zunglq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cungql" LAPACKE_cungql) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zungql" LAPACKE_zungql) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cungqr" LAPACKE_cungqr) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zungqr" LAPACKE_zungqr) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cungrq" LAPACKE_cungrq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zungrq" LAPACKE_zungrq) :int32
  (matrix_order :int)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cungtr" LAPACKE_cungtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_zungtr" LAPACKE_zungtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer))

(cffi:defcfun ("LAPACKE_cunmbr" LAPACKE_cunmbr) :int32
  (matrix_order :int)
  (vect :char)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmbr" LAPACKE_zunmbr) :int32
  (matrix_order :int)
  (vect :char)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cunmhr" LAPACKE_cunmhr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmhr" LAPACKE_zunmhr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ilo :int32)
  (ihi :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cunmlq" LAPACKE_cunmlq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmlq" LAPACKE_zunmlq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cunmql" LAPACKE_cunmql) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmql" LAPACKE_zunmql) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cunmqr" LAPACKE_cunmqr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmqr" LAPACKE_zunmqr) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cunmrq" LAPACKE_cunmrq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmrq" LAPACKE_zunmrq) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cunmrz" LAPACKE_cunmrz) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmrz" LAPACKE_zunmrz) :int32
  (matrix_order :int)
  (side :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (k :int32)
  (l :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cunmtr" LAPACKE_cunmtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zunmtr" LAPACKE_zunmtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (a :pointer)
  (lda :int32)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_cupgtr" LAPACKE_cupgtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_zupgtr" LAPACKE_zupgtr) :int32
  (matrix_order :int)
  (uplo :char)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (q :pointer)
  (ldq :int32))

(cffi:defcfun ("LAPACKE_cupmtr" LAPACKE_cupmtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))

(cffi:defcfun ("LAPACKE_zupmtr" LAPACKE_zupmtr) :int32
  (matrix_order :int)
  (side :char)
  (uplo :char)
  (trans :char)
  (m :int32)
  (n :int32)
  (ap :pointer)
  (tau :pointer)
  (c :pointer)
  (ldc :int32))


